{"version":3,"sources":["images/header-logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/Api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ProtectedRoute.js","components/Login.js","components/Register.js","images/registration-success.svg","images/registration-error.svg","components/InfoTooltip.js","utils/Auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","logo","alt","exact","path","userEmail","to","onClick","onSignOut","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onCardDelete","link","name","onCardClick","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","Footer","ImagePopup","onClose","api","options","_hanldeResponse","res","ok","json","Promise","reject","status","this","_baseUrl","baseUrl","_headers","headers","fetch","then","data","method","body","JSON","stringify","photoID","photoId","localStorage","getItem","PopupWithForm","isOpen","title","onSubmit","noValidate","children","isValid","disabled","EditProfilePopup","useState","setName","description","setDescription","inputNameValid","setInputNameValid","inputDescriptionValid","setInputDescriptionValid","inputNameValidationMessage","setInputNameValidationMessage","inputDescriptionValidationMessage","setInputDescriptionValidationMessage","inputsValid","setInputsValid","useEffect","e","preventDefault","onUpdateUser","id","placeholder","minLength","maxLength","value","onChange","target","targetValidity","validity","valid","validationMessage","required","EditAvatarPopup","setAvatar","inputValid","setInputValid","inputValidationMessage","setInputValidationMessage","onUpdateAvatar","AddPlacePopup","setLink","inputLinkValid","setInputLinkValid","inputLinkValidationMessage","setInputLinkValidationMessage","ProtectedRoute","Component","component","isLoggedIn","Login","email","setEmail","password","setPassword","emailValid","setEmailValid","passwordValid","setPasswordValid","emailValidsMsg","setEmailValidMsg","passwordValidMsg","setPasswordValidMsg","formValid","setFormValid","Register","InfoTooltip","isRegistrationSuccess","RegistrationSuccess","RegistrationError","BASE_URL","hanldeResponse","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isEditAvatarPopupOpen","setEditAvatarOpen","isAddPlacePopupOpen","setAddPlaceOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setIsLoggedIn","setIsRegistrationSuccess","history","useHistory","setLoading","closeAllPopups","getUserInfo","catch","err","console","log","token","jwt","Authorization","push","getInitialCards","Provider","removeItem","deletePhoto","filter","item","changeLikeCardStatus","newCard","state","c","Accept","auth","setItem","patchUserInfo","updateAvatar","addNewPhoto","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a850ac86.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.abb64ac9.svg\";","import logo from '../images/header-logo.svg'\nimport React from 'react'\nimport { Link, Route } from 'react-router-dom'\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <div className=\"header__container\">\n      <img className=\"header__logo\" src={logo} alt=\"Логотип Mesto\" />\n      <div className=\"header__login-container\">\n        <Route exact path=\"/\">\n          <p className=\"header__user-email\">{props.userEmail}</p>\n          <Link\n            to=\"/sign-in\"\n            className=\"header__link\"\n            onClick={props.onSignOut}\n          >\n            Выйти\n          </Link>\n        </Route>\n        <Route exact path=\"/sign-in\">\n          <Link to=\"/sign-up\" className=\"header__link\">\n            Регистрация\n          </Link>\n        </Route>\n        <Route exact path=\"/sign-up\">\n          <Link to=\"/sign-in\" className=\"header__link\">\n            Войти\n          </Link>\n        </Route>\n      </div>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nexport const CurrentUserContext = React.createContext()\n","import React from 'react'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext)\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = props.card.owner._id === currentUser._id\n\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = `${\n    isOwn ? 'photo-grid__delete-button' : 'photo-grid__delete-button_hidden'\n  }`\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id)\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `${\n    isLiked\n      ? 'photo-grid__like-button photo-grid__like-button_active'\n      : 'photo-grid__like-button'\n  }`\n\n  function handleCardClick() {\n    props.onCardClick(props.card)\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card)\n  }\n\n  function handleCardDelete() {\n    props.onCardDelete(props.card)\n  }\n\n  return (\n    <article className=\"photo-grid__card\">\n      <button\n        className={cardDeleteButtonClassName}\n        type=\"button\"\n        aria-label=\"Удалить изображение\"\n        onClick={handleCardDelete}\n      ></button>\n      <img\n        className=\"photo-grid__image\"\n        src={props.card.link}\n        alt={props.card.name}\n        onClick={handleCardClick}\n      />\n      <div className=\"photo-grid__container\">\n        <h2 className=\"photo-grid__title\">{props.card.name}</h2>\n        <div className=\"photo-grid__like-container\">\n          <button\n            className={cardLikeButtonClassName}\n            type=\"button\"\n            aria-label=\"Поставить лайк фотографии\"\n            onClick={handleLikeClick}\n          ></button>\n          <p className=\"photo-grid__like-counter\">{props.card.likes.length}</p>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext)\n\n  return (\n    <main className=\"main\">\n      {/* <!-- PROFILE --> */}\n      <section className=\"profile\">\n        <div className=\"profile__avatar-container\">\n          <img\n            className=\"profile__avatar\"\n            src={currentUser.avatar}\n            alt=\"Аватар пользователя\"\n          />\n          <div\n            className=\"profile__avatar-overlay\"\n            onClick={props.onEditAvatar}\n          ></div>\n        </div>\n        <div className=\"profile__card\">\n          <div className=\"profile__info\">\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\n            <button\n              className=\"profile__edit-button\"\n              type=\"button\"\n              aria-label=\"Редактировать профиль\"\n              onClick={props.onEditProfile}\n            ></button>\n          </div>\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\n        </div>\n        <button\n          className=\"profile__add-button\"\n          type=\"button\"\n          aria-label=\"Добавить фотографию\"\n          onClick={props.onAddPlace}\n        ></button>\n      </section>\n      {/* <!-- PHOTO GRID --> */}\n      <section className=\"photo-grid\">\n        {props.cards.map((card) => (\n          <Card\n            key={card._id}\n            card={card}\n            onCardClick={props.onCardClick}\n            onCardLike={props.onCardLike}\n            onCardDelete={props.onCardDelete}\n          />\n        ))}\n      </section>\n    </main>\n  )\n}\n\nexport default Main\n","import React from 'react'\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction ImagePopup(props) {\n  // console.log(props)\n  return (\n    <section\n      className={`popup popup_image-fullscreen ${\n        props.card.link && 'popup_opened'\n      }`}\n    >\n      <div className=\"popup__image-container\">\n        <button\n          type=\"button\"\n          className=\"popup__close-button\"\n          aria-label=\"Закрыть окно\"\n          onClick={props.onClose}\n        ></button>\n        <img\n          src={props.card.link}\n          alt={props.card.name}\n          className=\"popup__image\"\n        />\n        <p className=\"popup__image-fullscreen-text\">{props.card.name}</p>\n      </div>\n    </section>\n  )\n}\n\nexport default ImagePopup\n","class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl\n    this._headers = options.headers\n  }\n\n  _hanldeResponse = (res) => {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`)\n    }\n    return res.json()\n  }\n\n  /* Получение фото */\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then((res) => this._hanldeResponse(res))\n  }\n\n  /* Получение инфо о пользователе */\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then((res) => this._hanldeResponse(res))\n  }\n\n  /* Загрузка инфо о пользователе */\n  patchUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then((res) => this._hanldeResponse(res))\n  }\n\n  /* Добавление фото */\n  addNewPhoto(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then((res) => this._hanldeResponse(res))\n  }\n\n  /* Удаление фото */\n  deletePhoto(photoID) {\n    return fetch(`${this._baseUrl}/cards/${photoID}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then((res) => this._hanldeResponse(res))\n  }\n\n  /* Лайк фото */\n  setLike(photoId) {\n    return fetch(`${this._baseUrl}/cards/likes/${photoId}`, {\n      method: 'PUT',\n      headers: this._headers,\n    }).then((res) => this._hanldeResponse(res))\n  }\n\n  /* Снятие лайка */\n  deleteLike(photoId) {\n    return fetch(`${this._baseUrl}/cards/likes/${photoId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then((res) => this._hanldeResponse(res))\n  }\n\n  /* Снятие и установка лайка */\n  changeLikeCardStatus(photoId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/likes/${photoId}`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: this._headers,\n    }).then((res) => this._hanldeResponse(res))\n  }\n\n  /* Обновление аватара */\n  updateAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then((res) => this._hanldeResponse(res))\n  }\n}\n\n// NEW API\nconst api = new Api({\n  baseUrl: 'https://api.yurov.mesto.nomoredomains.rocks',\n\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${localStorage.getItem('token')}`,\n  },\n})\n\nexport default api\n","import React from 'react'\n\nfunction PopupWithForm(props) {\n  return (\n    <article\n      className={`popup popup_${props.name} ${props.isOpen && 'popup_opened'}`}\n    >\n      <div className=\"popup__container\">\n        <button\n          type=\"button\"\n          className=\"popup__close-button\"\n          aria-label=\"Закрыть окно\"\n          onClick={props.onClose}\n        ></button>\n        <h3 className=\"popup__title\">{props.title}</h3>\n        <form\n          className=\"popup__form\"\n          name={`${props.name}`}\n          onSubmit={props.onSubmit}\n          noValidate\n        >\n          {props.children}\n          <button\n            className={`popup__submit-button ${\n              !props.isValid && 'popup__submit-button_disabled'\n            }`}\n            type=\"submit\"\n            disabled={!props.isValid && true}\n          >\n            Сохранить\n          </button>\n        </form>\n      </div>\n    </article>\n  )\n}\n\nexport default PopupWithForm\n","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup(props) {\n  const [name, setName] = React.useState('')\n  const [description, setDescription] = React.useState('')\n\n  const currentUser = React.useContext(CurrentUserContext)\n\n  const [inputNameValid, setInputNameValid] = React.useState(false)\n  const [inputDescriptionValid, setInputDescriptionValid] =\n    React.useState(false)\n  const [inputNameValidationMessage, setInputNameValidationMessage] =\n    React.useState('')\n  const [\n    inputDescriptionValidationMessage,\n    setInputDescriptionValidationMessage,\n  ] = React.useState('')\n  const [inputsValid, setInputsValid] = React.useState(false)\n\n  React.useEffect(() => {\n    setName(currentUser.name)\n    setDescription(currentUser.about)\n    setInputNameValid(true)\n    setInputDescriptionValid(true)\n  }, [currentUser, props.isOpen])\n\n  React.useEffect(() => {\n    inputDescriptionValid && inputNameValid\n      ? setInputsValid(true)\n      : setInputsValid(false)\n  }, [inputDescriptionValid, inputNameValid])\n\n  function onChangeName(e) {\n    const target = e.target\n    const targetValidity = target.validity.valid\n    setName(e.target.value)\n    targetValidity ? setInputNameValid(true) : setInputNameValid(false)\n    targetValidity\n      ? setInputNameValidationMessage('')\n      : setInputNameValidationMessage(target.validationMessage)\n  }\n\n  function onChangeDescription(e) {\n    const target = e.target\n    const targetValidity = target.validity.valid\n    setDescription(e.target.value)\n    targetValidity\n      ? setInputDescriptionValid(true)\n      : setInputDescriptionValid(false)\n    targetValidity\n      ? setInputDescriptionValidationMessage('')\n      : setInputDescriptionValidationMessage(target.validationMessage)\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    props.onUpdateUser({\n      name,\n      about: description,\n    })\n  }\n\n  return (\n    /* POPUP - PROFILE EDIT */\n    <PopupWithForm\n      name=\"profile-edit\"\n      title=\"Редактировать профиль\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isValid={inputsValid}\n    >\n      <section className=\"popup__section\">\n        <input\n          className={`popup__input popup__input_type_title ${\n            !inputsValid && 'popup__input_type_error'\n          }`}\n          type=\"text\"\n          name=\"name\"\n          id=\"profiletitle-input\"\n          placeholder=\"Имя профиля\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          value={name || ''}\n          onChange={onChangeName}\n          required\n        />\n        <span\n          className={`popup__error ${!inputsValid && 'popup__error_visible'}`}\n          id=\"profiletitle-input-error\"\n        >\n          {inputNameValidationMessage}\n        </span>\n      </section>\n      <section className=\"popup__section\">\n        <input\n          className={`popup__input popup__input_type_subtitle ${\n            !inputsValid && 'popup__input_type_error'\n          }`}\n          type=\"text\"\n          name=\"about\"\n          id=\"pofilesubtitle-input\"\n          placeholder=\"Описание профиля\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          value={description || ''}\n          onChange={onChangeDescription}\n          required\n        />\n        <span\n          className={`popup__error ${!inputsValid && 'popup__error_visible'}`}\n          id=\"pofilesubtitle-input-error\"\n        >\n          {inputDescriptionValidationMessage}\n        </span>\n      </section>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup\n","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nfunction EditAvatarPopup(props) {\n  // const avatarRef = React.useRef()\n\n  const [avatar, setAvatar] = React.useState('')\n\n  const [inputValid, setInputValid] = React.useState(false)\n  const [inputValidationMessage, setInputValidationMessage] = React.useState('')\n\n  // function handleSubmit(e) {\n  //   e.preventDefault()\n\n  //   props.onUpdateAvatar({\n  //     avatar: avatarRef.current.value,\n  //   })\n  // }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    props.onUpdateAvatar({\n      avatar: avatar,\n    })\n  }\n\n  function handleChange(e) {\n    const target = e.target\n    const targetValidity = target.validity.valid\n    setAvatar(target.value)\n    targetValidity ? setInputValid(true) : setInputValid(false)\n    targetValidity\n      ? setInputValidationMessage('')\n      : setInputValidationMessage(target.validationMessage)\n  }\n\n  React.useEffect(() => {\n    setAvatar('')\n    setInputValid(false)\n    setInputValidationMessage('')\n  }, [props.isOpen])\n\n  return (\n    /* POPUP - EDIT AVATAR */\n    <PopupWithForm\n      name=\"edit-avatar\"\n      title=\"Обновить аватар\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isValid={inputValid}\n    >\n      <section className=\"popup__section\">\n        <input\n          className={`popup__input popup__input_type_avatar-url ${\n            !inputValid && 'popup__input_type_error'\n          }`}\n          type=\"url\"\n          name=\"avatar\"\n          id=\"avatar-input\"\n          placeholder=\"Ссылка на изображение\"\n          //ref={avatarRef}\n          value={avatar}\n          onChange={handleChange}\n          required\n        />\n        <span\n          className={`popup__error ${!inputValid && 'popup__error_visible'}`}\n          id=\"avatar-input-error\"\n        >\n          {inputValidationMessage}\n        </span>\n      </section>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup\n","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nfunction AddPlacePopup(props) {\n  const [name, setName] = React.useState('')\n  const [link, setLink] = React.useState('')\n\n  const [inputNameValid, setInputNameValid] = React.useState(false)\n  const [inputLinkValid, setInputLinkValid] = React.useState(false)\n  const [inputNameValidationMessage, setInputNameValidationMessage] =\n    React.useState('')\n  const [inputLinkValidationMessage, setInputLinkValidationMessage] =\n    React.useState('')\n  const [inputsValid, setInputsValid] = React.useState(false)\n\n  function onChangeName(e) {\n    const target = e.target\n    const targetValidity = target.validity.valid\n    setName(e.target.value)\n    targetValidity ? setInputNameValid(true) : setInputNameValid(false)\n    targetValidity\n      ? setInputNameValidationMessage('')\n      : setInputNameValidationMessage(target.validationMessage)\n  }\n\n  function onChangeLink(e) {\n    const target = e.target\n    const targetValidity = target.validity.valid\n    setLink(e.target.value)\n    targetValidity ? setInputLinkValid(true) : setInputLinkValid(false)\n    targetValidity\n      ? setInputLinkValidationMessage('')\n      : setInputLinkValidationMessage(target.validationMessage)\n  }\n\n  React.useEffect(() => {\n    inputLinkValid && inputNameValid\n      ? setInputsValid(true)\n      : setInputsValid(false)\n  }, [inputLinkValid, inputNameValid])\n\n  React.useEffect(() => {\n    setName('')\n    setLink('')\n    setInputNameValid(false)\n    setInputNameValidationMessage('')\n    setInputLinkValid(false)\n    setInputLinkValidationMessage('')\n  }, [props.isOpen])\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    props.onAddPlace({\n      name: name,\n      link: link,\n    })\n  }\n\n  return (\n    /* POPUP - ADD PHOTO */\n    <PopupWithForm\n      name=\"add-photo\"\n      title=\"Новое место\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isValid={inputsValid}\n    >\n      <section className=\"popup__section\">\n        <input\n          className=\"popup__input popup__input_type_photo-name\"\n          type=\"text\"\n          name=\"name\"\n          id=\"phototitle-input\"\n          placeholder=\"Название изображения\"\n          minLength=\"2\"\n          maxLength=\"30\"\n          value={name}\n          onChange={onChangeName}\n          required\n        />\n        <span\n          className={`popup__error ${!inputsValid && 'popup__error_visible'}`}\n          id=\"phototitle-input-error\"\n        >\n          {inputNameValidationMessage}\n        </span>\n      </section>\n      <section className=\"popup__section\">\n        <input\n          className=\"popup__input popup__input_type_photo-url\"\n          type=\"url\"\n          name=\"link\"\n          id=\"photourl-input\"\n          placeholder=\"Ссылка на изображение\"\n          value={link}\n          onChange={onChangeLink}\n          required\n        />\n        <span\n          className={`popup__error ${!inputsValid && 'popup__error_visible'}`}\n          id=\"photourl-input-error\"\n        >\n          {inputLinkValidationMessage}\n        </span>\n      </section>\n    </PopupWithForm>\n  )\n}\nexport default AddPlacePopup\n","import { Route, Redirect } from 'react-router-dom'\n\nfunction ProtectedRoute({ component: Component, ...props }) {\n  return (\n    <Route>\n      {() =>\n        props.isLoggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\n      }\n    </Route>\n  )\n}\n\nexport default ProtectedRoute\n","import React from 'react'\n\nfunction Login(props) {\n  const [email, setEmail] = React.useState('')\n  const [password, setPassword] = React.useState('')\n\n  const [emailValid, setEmailValid] = React.useState(false)\n  const [passwordValid, setPasswordValid] = React.useState(false)\n  const [emailValidsMsg, setEmailValidMsg] = React.useState('')\n  const [passwordValidMsg, setPasswordValidMsg] = React.useState('')\n  const [formValid, setFormValid] = React.useState(false)\n\n  function onEmailChange(e) {\n    const target = e.target\n    const targetValidity = target.validity.valid\n    setEmail(e.target.value)\n    targetValidity ? setEmailValid(true) : setEmailValid(false)\n    targetValidity\n      ? setEmailValidMsg('')\n      : setEmailValidMsg(target.validationMessage)\n  }\n\n  function onPasswordChange(e) {\n    const target = e.target\n    const targetValidity = target.validity.valid\n    setPassword(e.target.value)\n    targetValidity ? setPasswordValid(true) : setPasswordValid(false)\n    targetValidity\n      ? setPasswordValidMsg('')\n      : setPasswordValidMsg(target.validationMessage)\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    props.onSubmit(email, password)\n  }\n\n  React.useEffect(() => {\n    emailValid && passwordValid ? setFormValid(true) : setFormValid(false)\n  }, [emailValid, passwordValid])\n\n  return (\n    <main className=\"main\">\n      <section className=\"entry-page\">\n        <h1 className=\"entry-page__title\">Вход</h1>\n        <form\n          className=\"entry-page__form\"\n          name=\"sign-in-form\"\n          onSubmit={handleSubmit}\n          isValid={formValid}\n        >\n          <section className=\"entry-page__section\">\n            <input\n              className=\"entry-page__input\"\n              type=\"email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              minLength=\"2\"\n              maxLength=\"40\"\n              value={email}\n              onChange={onEmailChange}\n              required\n            />\n            <span\n              className={`entry-page__error ${\n                !formValid && 'entry-page__error_visible'\n              }`}\n            >\n              {emailValidsMsg}\n            </span>\n          </section>\n          <section className=\"entry-page__section\">\n            <input\n              className=\"entry-page__input\"\n              type=\"password\"\n              placeholder=\"Пароль\"\n              name=\"password\"\n              minLength=\"4\"\n              maxLength=\"10\"\n              value={password}\n              onChange={onPasswordChange}\n              required\n            />\n            <span\n              className={`entry-page__error ${\n                !formValid && 'entry-page__error_visible'\n              }`}\n            >\n              {passwordValidMsg}\n            </span>\n          </section>\n          <button\n            className={`entry-page__button ${\n              !formValid && 'entry-page__button_disabled'\n            }`}\n            type=\"submit\"\n            disabled={!formValid && true}\n          >\n            Войти\n          </button>\n        </form>\n      </section>\n    </main>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Register(props) {\n  const [email, setEmail] = React.useState('')\n  const [password, setPassword] = React.useState('')\n\n  const [emailValid, setEmailValid] = React.useState(false)\n  const [passwordValid, setPasswordValid] = React.useState(false)\n  const [emailValidsMsg, setEmailValidMsg] = React.useState('')\n  const [passwordValidMsg, setPasswordValidMsg] = React.useState('')\n  const [formValid, setFormValid] = React.useState(false)\n\n  function onEmailChange(e) {\n    const target = e.target\n    const targetValidity = target.validity.valid\n    setEmail(e.target.value)\n    targetValidity ? setEmailValid(true) : setEmailValid(false)\n    targetValidity\n      ? setEmailValidMsg('')\n      : setEmailValidMsg(target.validationMessage)\n  }\n\n  function onPasswordChange(e) {\n    const target = e.target\n    const targetValidity = target.validity.valid\n    setPassword(e.target.value)\n    targetValidity ? setPasswordValid(true) : setPasswordValid(false)\n    targetValidity\n      ? setPasswordValidMsg('')\n      : setPasswordValidMsg(target.validationMessage)\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    props.onSubmit(email, password)\n  }\n\n  React.useEffect(() => {\n    emailValid && passwordValid ? setFormValid(true) : setFormValid(false)\n  }, [emailValid, passwordValid])\n\n  return (\n    <main className=\"main\">\n      <section className=\"entry-page\">\n        <h1 className=\"entry-page__title\">Регистрация</h1>\n        <form\n          className=\"entry-page__form\"\n          name=\"sign-in-form\"\n          onSubmit={handleSubmit}\n          isValid={formValid}\n        >\n          <section className=\"entry-page__section\">\n            <input\n              className=\"entry-page__input\"\n              type=\"email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              minLength=\"2\"\n              maxLength=\"40\"\n              value={email}\n              onChange={onEmailChange}\n              required\n            />\n            <span\n              className={`entry-page__error ${\n                !formValid && 'entry-page__error_visible'\n              }`}\n            >\n              {emailValidsMsg}\n            </span>\n          </section>\n          <section className=\"entry-page__section\">\n            <input\n              className=\"entry-page__input\"\n              type=\"password\"\n              placeholder=\"Пароль\"\n              name=\"password\"\n              minLength=\"4\"\n              maxLength=\"10\"\n              value={password}\n              onChange={onPasswordChange}\n              required\n            />\n            <span\n              className={`entry-page__error ${\n                !formValid && 'entry-page__error_visible'\n              }`}\n            >\n              {passwordValidMsg}\n            </span>\n          </section>\n          <button\n            className={`entry-page__button ${\n              !formValid && 'entry-page__button_disabled'\n            }`}\n            type=\"submit\"\n            disabled={!formValid && true}\n          >\n            Зарегистрироваться\n          </button>\n        </form>\n        <Link to=\"/sign-in\" className=\"entry-page__link\">\n          Уже зарегистрированы? Войти\n        </Link>\n      </section>\n    </main>\n  )\n}\n\nexport default Register\n","export default __webpack_public_path__ + \"static/media/registration-success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/registration-error.7c6a020b.svg\";","import React from 'react'\nimport RegistrationSuccess from '../images/registration-success.svg'\nimport RegistrationError from '../images/registration-error.svg'\n\nfunction InfoTooltip(props) {\n  return (\n    <article\n      className={`popup ${props.isOpen && 'popup_opened'}`}\n    >\n      <div className=\"popup__container\">\n        <button\n          type=\"button\"\n          className=\"popup__close-button\"\n          aria-label=\"Закрыть окно\"\n          onClick={props.onClose}\n        ></button>\n        <img\n          className=\"popup__icon\"\n          src={\n            props.isRegistrationSuccess\n              ? RegistrationSuccess\n              : RegistrationError\n          }\n          alt={props.isRegistrationSuccess\n          ? 'Круг с галкой в центре'\n          : 'Круг с крестом в центре'\n          }\n        />\n        <h2 className=\"popup__text\">\n          {props.isRegistrationSuccess\n            ? 'Вы успешно зарегистрировались!'\n            : 'Что-то пошло не так! Попробуйте еще раз.'}\n        </h2>\n      </div>\n    </article>\n  )\n}\n\nexport default InfoTooltip\n","export const BASE_URL = 'https://api.yurov.mesto.nomoredomains.rocks'\n\nconst hanldeResponse = (res) => {\n  if (!res.ok) {\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n  return res.json()\n}\n\nexport const registration = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password,\n    }),\n  }).then((res) => hanldeResponse(res))\n}\n\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  })\n    .then((res) => hanldeResponse(res))\n    .then((data) => {\n      return data\n    })\n}\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((res) => hanldeResponse(res))\n}\n","import React from 'react'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport ImagePopup from './ImagePopup'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport api from '../utils/Api'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ProtectedRoute from './ProtectedRoute'\nimport Login from './Login'\nimport Register from './Register'\nimport InfoTooltip from './InfoTooltip'\nimport { Route, Redirect, Switch, useHistory } from 'react-router-dom'\nimport * as auth from '../utils/Auth'\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] =\n    React.useState(false)\n  const [isEditAvatarPopupOpen, setEditAvatarOpen] = React.useState(false)\n  const [isAddPlacePopupOpen, setAddPlaceOpen] = React.useState(false)\n  // Popup авторизации\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false)\n  const [selectedCard, setSelectedCard] = React.useState({ name: '', link: '' })\n  const [currentUser, setCurrentUser] = React.useState({})\n  // Карточки\n  const [cards, setCards] = React.useState([])\n\n  // Авторизация\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false)\n  const [isRegistrationSuccess, setIsRegistrationSuccess] =\n    React.useState(false)\n  const history = useHistory()\n  const [email, setEmail] = React.useState('')\n\n  //Loading\n  const [loading, setLoading] = React.useState(false)\n\n  // API\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  // Auth\n  // Регистрация пользователя\n  function handleRegistrationSubmit(email, password) {\n    setLoading(true)\n    auth\n      .registration(email, password)\n      .then((res) => {\n        if (res) {\n          setIsRegistrationSuccess(true)\n          setIsInfoTooltipOpen(true)\n          history.push('/sign-in')\n        }\n      })\n\n      .catch((err) => {\n        setIsRegistrationSuccess(false)\n        setIsInfoTooltipOpen(true)\n        console.log(err)\n      })\n    setLoading(false)\n  }\n\n  // Логин пользователя\n  function handleLoginSubmit(email, password) {\n    auth\n      .login(email, password)\n      .then((res) => {\n        if (res) {\n          localStorage.setItem('token', res.token)\n          setIsLoggedIn(true)\n          setEmail(email)\n          history.push('/')\n        }\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Проверка токена\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('token')\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((res) => {\n          setIsLoggedIn(true)\n          setEmail(res.data.email)\n          history.push('/')\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  })\n\n  // Выход из аккаунта\n  function handleSignOut() {\n    localStorage.removeItem('token')\n    setIsLoggedIn(false)\n    history.push('/sign-in')\n  }\n\n  // Обновление данных профиля\n  function handleUpdateUser(data) {\n    api\n      .patchUserInfo(data)\n      .then((res) => {\n        setCurrentUser(res)\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Обновление аватара\n  function handleUpdateAvatar(data) {\n    api\n      .updateAvatar(data)\n      .then((res) => {\n        setCurrentUser(res)\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Получение изначальных карточек\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((res) => {\n        setCards(res)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  // Лайк карточки\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id)\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)))\n    })\n  }\n\n  // Удаление карточки\n  function handleCardDelete(card) {\n    api\n      .deletePhoto(card._id)\n      .then(() => {\n        setCards(cards.filter((item) => item._id !== card._id))\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Добавление карточки\n  function handleAddPlaceSubmit(card) {\n    api\n      .addNewPhoto(card)\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n\n  // Открытие Popup'ов\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlaceOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarOpen(true)\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false)\n    setEditAvatarOpen(false)\n    setAddPlaceOpen(false)\n    setSelectedCard({ name: '', link: '' })\n    setIsInfoTooltipOpen(false)\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"body\">\n        <div className=\"page\">\n          {/* HEADER */}\n          <Header userEmail={email} onSignOut={handleSignOut} />\n          {/* MAIN */}\n          <Switch>\n            <ProtectedRoute\n              exact\n              path=\"/\"\n              isLoggedIn={isLoggedIn}\n              component={Main}\n              onEditProfile={handleEditProfileClick}\n              onEditAvatar={handleEditAvatarClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardDelete={handleCardDelete}\n              onCardLike={handleCardLike}\n            />\n            <Route path=\"/sign-in\">\n              <Login onSubmit={handleLoginSubmit} />\n            </Route>\n            <Route path=\"/sign-up\">\n              <Register onSubmit={handleRegistrationSubmit} />\n            </Route>\n            <Route path=\"/\">\n              {isLoggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n            </Route>\n          </Switch>\n\n          {/* FOOTER */}\n          <Footer />\n        </div>\n\n        {/* POPUP - INFO TOOLTIP */}\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          isRegistrationSuccess={isRegistrationSuccess}\n        />\n        {/* POPUP - PROFILE EDIT */}\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        {/* POPUP - EDIT AVATAR */}\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        {/* POPUP - ADD PHOTO */}\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        {/* POPUP - IMAGE FULLSCREEN */}\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}